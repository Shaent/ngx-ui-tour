{"version":3,"sources":["webpack:///src/app/md-menu/docs.component.html","webpack:///src/app/md-menu/docs.component.ts","webpack:///src/app/md-menu/md-menu.component.html","webpack:///src/app/md-menu/md-menu.component.ts","webpack:///src/app/md-menu/md-menu.module.ts","webpack:///src/app/md-menu/other-route.component.ts"],"names":["DocsComponent","tourService","isLoading","showIsAsyncConfig","subscribeToShowStep","startWaitingSubscription","startWaiting$","subscribe","loadData","of","pipe","delay","result","fakeData","unsubscribe","MdMenuComponent","initialize","anchorId","content","placement","title","route","enableBackdrop","prevBtnTitle","nextBtnTitle","endBtnTitle","isAsync","start","MdMenuModule","CommonModule","TourMatMenuModule","RouterModule","component","path","children","OtherRouteComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuVI;;AACE;;AACE;;AAAI;;AAAO;;AACX;;AAAI;;AAAO;;AACX;;AAAI;;AAAK;;AACT;;AACE;;AACF;;AACF;;AACF;;;;;;AAEE;;AACE;;AAAQ;;AAAe;;AACzB;;;;;;AACA;;AACE;;;;AACF;;;;;;AADE;;AAAA;;;;UC5VKA,c;AAOX,gCACmBC,WADnB,EAC2C;AAAA;;AAAxB,eAAAA,WAAA,GAAAA,WAAA;AANnB,eAAAC,SAAA,GAAY,IAAZ;AACA,eAAAC,iBAAA,GAAoB,IAApB;AAMI;;;;iBAEJ,oBAAW;AACT,iBAAKC,mBAAL;AACD;;;iBAED,+BAAsB;AAAA;;AACpB,iBAAKC,wBAAL,GAAgC,KAAKJ,WAAL,CAC7BK,aAD6B,CAE7BC,SAF6B,CAEnB;AAAA,qBAAM,KAAI,CAACC,QAAL,EAAN;AAAA,aAFmB,CAAhC;AAGD;;;iBAED,oBAAW;AAAA;;AACT,iBAAKL,iBAAL,GAAyB,KAAzB;AACA,kDAAAM,EAAA,EAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAH,EACGC,IADH,CACQ,gDAAAC,KAAA,EAAM,IAAN,CADR,EAEGJ,SAFH,CAEa,UAAAK,MAAM,EAAI;AACnB,oBAAI,CAACV,SAAL,GAAiB,KAAjB;AACA,oBAAI,CAACW,QAAL,GAAgBD,MAAhB;AACA,oBAAI,CAACT,iBAAL,GAAyB,IAAzB;AACD,aANH;AAOD;;;iBAED,uBAAc;AACZ,iBAAKE,wBAAL,CAA8BS,WAA9B;AACD;;;;;;;yBAlCUd,c,EAAa,6H;AAAA,O;;;cAAbA,c;AAAa,6B;AAAA,kB;AAAA,gB;AAAA,i+B;AAAA;AAAA;ADV1B;;AAAI;;AAAK;;AACT;;AAAG;;AACD;;AAAiF;;AAAe;;AAAI;;AAAC;;AACvG;;AACE;;AAAM;;AAAiB;;AAAQ;;AAC/B;;AAAqC;;AAAgB;;AAAK;;AAA8B;;AAE1F;;AAA8B;;AAAY;;AAC1C;;AACE;;AACE;;AAAM;;AAAiH;;AACzH;;AACA;;AAAI;;AACF;;AAAM;;AAA2B;;AAAQ;;AAAoB;;AAC/D;;AAAI;;AACF;;AAAM;;AAAY;;AAAQ;;AAA8B;;AAC1D;;AAAI;;AACF;;AAA4D;;AAAmB;;AACjF;;AACF;;AAEA;;AAAuB;;AAAK;;AAE5B;;AAAI;;AAAc;;AAClB;;AACE;;AAAI;;AACF;;AAAM;;AAAqD;;AAAQ;;AAA0B;;AAC/F;;AACE;;AACA;;AAAM;;AAAU;;AAAQ;;AACxB;;AAAK;;AAAM;;AAAsD;;AAAO;;AAC1E;;AACA;;AACE;;AACA;;AAAM;;AAA6B;;AACnC;;AACJ;;AAQI;;AACF;;AACA;;AAAI;;AACF;;AAAqC;;AAAmB;;AAC1D;;AACA;;AAAI;;AACF;;AAA6E;;AAAgB;;AAAK;;AAAe;;AACrH;;AAEA;;AAAI;;AAAmB;;AAEvB;;AAEE;;AACE;;AACA;;AAAK;;AAAM;;AAAqD;;AAAO;;AAAO;;AAChF;;AACA;;AACE;;AACA;;AAAK;;AAAM;;AAA2B;;AAAO;;AAAO;;AACtD;;AACA;;AACE;;AACA;;AAAK;;AAAM;;AAAiB;;AAAO;;AAAO;;AAC5C;;AACA;;AACE;;AACA;;AAAK;;AAAM;;AAAW;;AAAO;;AAAO;;AAEpC;;AAAQ;;AAAK;;AACb;;AAEA;;AAAM;;AAAc;;AAAQ;;AAC9B;;AACA;;AACE;;AACA;;AAAK;;AAAM;;AAAU;;AAAO;;AAAO;;AACnC;;AAAK;;AAAM;;AAAsD;;AAAO;;AAC1E;;AACA;;AACE;;AACA;;AAAK;;AAAM;;AAAmB;;AAAO;;AAAO;;AAC9C;;AACA;;AAAI;;AACF;;AAA2F;;AAAgB;;AAAK;;AAClH;;AAEF;;AAEA;;AAAI;;AAAG;;AAEP;;AAAI;;AAAwB;;AAE5B;;AAAG;;AAA8E;;AACjF;;AACE;;AAAI;;AACF;;AAAK;;AACT;;AACI;;AAAO;;AACT;;AACA;;AACE;;AACA;;AAAK;;AACT;;AAQI;;AAAO;;AACT;;AACA;;AACE;;AACA;;AAAK;;AACT;;AAMI;;AAAO;;AACT;;AACF;;AAEA;;AAAI;;AAA6D;;AACjE;;AAAG;;AAA6F;;AAChG;;AACE;;AACE;;AAAc;;AAAM;;AAAW;;AAAO;;AACtC;;AAAK;;AACT;;AAmCI;;AAAO;;AACT;;AACA;;AACE;;AAAQ;;AAAM;;AAAS;;AAAQ;;AAAqC;;AAAM;;AAAa;;AAAO;;AAC9F;;AAAK;;AACT;;AAGI;;AAAO;;AACT;;AACA;;AACE;;AAAgB;;AAAM;;AAAW;;AAAQ;;AACzC;;AAAK;;AACT;;AAoBI;;AAAO;;AACT;;AACF;;AAEA;;AAAI;;AAAW;;AACf;;AAAG;;AACD;;AAAM;;AAAW;;AAAQ;;AAA8C;;AACzE;;AACE;;AAAI;;AAAO;;AACX;;AAAI;;AAAe;;AACnB;;AAAI;;AAAgC;;AACpC;;AAAI;;AAAgE;;AACpE;;AAAI;;AAAK;;AACT;;AAAI;;AAAa;;AACjB;;AAAI;;AAAO;;AACX;;AAAI;;AAAe;;AACnB;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAM;;AACV;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAM;;AACV;;AAAI;;AAAyB;;AAC/B;;AAEA;;AAAI;;AAAkB;;AACtB;;AAAG;;AAA4C;;AAC/C;;AACE;;AACE;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAAI;;AACR;;AAAI;;AAAO;;AACX;;AAAI;;AAAW;;AACjB;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAM;;AACV;;AAAI;;AAAM;;AACV;;AAAI;;AAAE;;AACN;;AAAI;;AAAgC;;AACtC;;AACA;;AACE;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAM;;AACV;;AAAI;;AAAQ;;AACZ;;AAAI;;AAA6C;;AACnD;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAM;;AACV;;AAAI;;AAAE;;AACN;;AAAI;;AAA0B;;AAChC;;AACA;;AACE;;AAAI;;AAAO;;AACX;;AAAI;;AAAM;;AACV;;AAAI;;AAAE;;AACN;;AAAI;;AAAiC;;AACvC;;AACA;;AACE;;AAAI;;AAAc;;AAClB;;AAAI;;AAAO;;AACX;;AAAI;;AAAK;;AACT;;AAAI;;AAAsD;;AAC5D;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAS;;AACb;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAe;;AACnB;;AAAI;;AAAS;;AACb;;AAAI;;AAAkG;;AACxG;;AACA;;AACE;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAe;;AACnB;;AAAI;;AAAS;;AACb;;AAAI;;AAA0G;;AAChH;;AACA;;AACE;;AACE;;AAAK;;AAAS;;AAChB;;AACA;;AAAI;;AAAG;;AACP;;AAAI;;AAAG;;AACP;;AACE;;AACA;;AAAM;;AAAiB;;AACzB;;AACF;;AACA;;AACE;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAO;;AACX;;AAAI;;AAAK;;AACT;;AACE;;AAEF;;AACF;;AACA;;AACE;;AAAI;;AAAY;;AAChB;;AAAI;;AAAM;;AACV;;AAAI;;AAAK;;AACT;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAY;;AAChB;;AAAI;;AAAM;;AACV;;AAAI;;AAAK;;AACT;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAW;;AACf;;AAAI;;AAAM;;AACV;;AAAI;;AAAK;;AACT;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAK;;AAAO;;AAAM;;AACtB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAS;;AACb;;AACE;;AAEF;;AACF;;AACA;;AAUA;;AACE;;AAGA;;AAGF;;AACF;;AACF;;AAEA;;AAAI;;AAAQ;;AACZ;;AAAG;;AACD;;AAAM;;AAAsB;;AAAQ;;AAAS;;AAC/C;;AACA;;AAIA;;AACA;;AAAG;;AAAuE;;AAE1E;;AAAyB;;AAAO;;AAChC;;AACE;;AACA;;AAAM;;AAAa;;AAAQ;;AAC7B;;AACA;;AACE;;AACE;;AAAQ;;AAAU;;AAClB;;AAAO;;AAAe;;AACxB;;AACA;;AACE;;AAAQ;;AAAW;;AACnB;;AAAO;;AAAW;;AACpB;;AACA;;AACE;;AAAQ;;AAAG;;AACX;;AAAO;;AAAU;;AACnB;;AACF;;AACA;;AACE;;AACA;;AAAM;;AAA4B;;AAAQ;;AAC1C;;AAAM;;AAA2B;;AACnC;;AAEA;;AAAwB;;AAAiB;;AACzC;;AAAG;;AACD;;AAAM;;AAAW;;AAAQ;;AAAiD;;AAC5E;;AACA;;AAGA;;AACA;;AACE;;AACE;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAAO;;AACX;;AAAI;;AAAY;;AAClB;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAS;;AACb;;AAAI;;AAAW;;AACf;;AAAI;;AAAe;;AACrB;;AACA;;AACE;;AAAI;;AAAS;;AACb;;AAAI;;AAAW;;AACf;;AAAI;;AAAgB;;AACtB;;AACA;;AACE;;AAAI;;AAAW;;AACf;;AAAI;;AAAa;;AACjB;;AAAI;;AAA0C;;AAChD;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AAAI;;AAAW;;AACf;;AAAI;;AAAe;;AACrB;;AACA;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAAG;;AACP;;AAAI;;AAAa;;AACnB;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AAAI;;AAAW;;AACf;;AAAI;;AAAkB;;AACxB;;AACA;;AACE;;AAAI;;AAAO;;AACX;;AAAI;;AAAW;;AACf;;AAAI;;AAAgB;;AACtB;;AACA;;AACE;;AAAI;;AAAe;;AACnB;;AAAI;;AAAM;;AACV;;AAAI;;AAAqC;;AAC3C;;AACA;;AACE;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAM;;AACV;;AAAI;;AAAuC;;AAC7C;;AACA;;AACE;;AAAI;;AAAa;;AACjB;;AAAI;;AAAW;;AACf;;AAAI;;AAAkE;;AACxE;;AACA;;AACE;;AAAI;;AAAY;;AAChB;;AAAI;;AAAW;;AACf;;AAAI;;AAA2E;;AACjF;;AACF;;AACF;;AAEA;;AAA0B;;AAAe;;AACzC;;AACE;;AACA;;AAAM;;AAAoC;;AAAQ;;AAClD;;AAAM;;AAA0B;;AAClC;;AACA;;AACE;;AACF;;AACA;;AAAK;;AAAM;;AAqBX;;AAAO;;AAEP;;AAAI;;AAA0B;;AAC9B;;AACE;;AACA;;AAAM;;AAAqB;;AAAQ;;AACrC;;;;AA3dA;;AAAA;;AAuEA;;AAAA;;AAaA;;AAAA;;AAgBA;;AAAA;;AAwCA;;AAAA;;AAQA;;AAAA;;AA+JqC;;AAAA;;AAWd;;AAAA;;AAGA;;AAAA;;AAWvB;;AAAA;;AAoCA;;AAAA;;AAgFW;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtdT;;;;;;;;AAAA;;;;UCNWe,gB;AAEX,kCACSd,WADT,EACiC;AAAA;;AAAxB,eAAAA,WAAA,GAAAA,WAAA;AACL;;;;iBAEJ,oBAAW;AACT,iBAAKA,WAAL,CAAiBe,UAAjB,CAA4B,CAAC;AAC3BC,sBAAQ,EAAE,YADiB;AAE3BC,qBAAO,EAAE,kCAFkB;AAG3BC,uBAAS,EAAE,OAHgB;AAI3BC,mBAAK,EAAE;AAJoB,aAAD,EAKzB;AACDH,sBAAQ,EAAE,iBADT;AAEDC,qBAAO,EAAE,+DAFR;AAGDG,mBAAK,EAAE,EAHN;AAIDD,mBAAK,EAAE;AAJN,aALyB,EAUzB;AACDH,sBAAQ,EAAE,cADT;AAEDC,qBAAO,EAAE,+BAFR;AAGDE,mBAAK,EAAE;AAHN,aAVyB,EAczB;AACDH,sBAAQ,EAAE,OADT;AAEDC,qBAAO,EAAE,iBAFR;AAGDE,mBAAK,EAAE;AAHN,aAdyB,EAkBzB;AACDH,sBAAQ,EAAE,mBADT;AAEDC,qBAAO,EAAE,2CAFR;AAGDE,mBAAK,EAAE;AAHN,aAlByB,EAsBzB;AACDH,sBAAQ,EAAE,iBADT;AAEDC,qBAAO,EAAE,6BAFR;AAGDE,mBAAK,EAAE;AAHN,aAtByB,EA0BzB;AACDH,sBAAQ,EAAE,uBADT;AAEDC,qBAAO,EAAE,sDAFR;AAGDE,mBAAK,EAAE,UAHN;AAIDE,4BAAc,EAAE;AAJf,aA1ByB,EA+BzB;AACDL,sBAAQ,EAAE,cADT;AAEDC,qBAAO,EAAE,iCAFR;AAGDE,mBAAK,EAAE;AAHN,aA/ByB,EAmCzB;AACDH,sBAAQ,EAAE,eADT;AAEDC,qBAAO,EAAE,YAFR;AAGDG,mBAAK,EAAE,OAHN;AAIDD,mBAAK,EAAE;AAJN,aAnCyB,EAwCzB;AACDH,sBAAQ,EAAE,cADT;AAEDC,qBAAO,EAAE,sBAFR;AAGDC,uBAAS,EAAE,OAHV;AAIDC,mBAAK,EAAE;AAJN,aAxCyB,EA6CzB;AACDH,sBAAQ,EAAE,uBADT;AAEDC,qBAAO,EAAE,sCAFR;AAGDE,mBAAK,EAAE,eAHN;AAIDG,0BAAY,EAAE,SAJb;AAKDC,0BAAY,EAAE,SALb;AAMDC,yBAAW,EAAE;AANZ,aA7CyB,EAoDzB;AACDR,sBAAQ,EAAE,gBADT;AAEDC,qBAAO,EAAE,wEAFR;AAGDE,mBAAK,EAAE;AAHN,aApDyB,EAwDzB;AACDH,sBAAQ,EAAE,iBADT;AAEDC,qBAAO,EAAE,iCAFR;AAGDE,mBAAK,EAAE,kBAHN;AAIDM,qBAAO,EAAE;AAJR,aAxDyB,EA6DzB;AACDT,sBAAQ,EAAE,SADT;AAEDC,qBAAO,EAAE,qDAFR;AAGDE,mBAAK,EAAE;AAHN,aA7DyB,EAiEzB;AACDH,sBAAQ,EAAE,QADT;AAEDC,qBAAO,EAAE,6BAFR;AAGDE,mBAAK,EAAE;AAHN,aAjEyB,CAA5B,EAqEI;AACFC,mBAAK,EAAE;AADL,aArEJ;AAwEA,iBAAKpB,WAAL,CAAiB0B,KAAjB;AACD;;;;;;;yBAhFUZ,gB,EAAe,6H;AAAA,O;;;cAAfA,gB;AAAe,sC;AAAA,gB;AAAA,e;AAAA,8M;AAAA;AAAA;ADR5B;;AACG;;AAAc;;AAEjB;;AAEE;AAAA,qBAAS,IAAAd,WAAA,SAAT;AAA6B,aAA7B;;AAGC;;AAAe;;AAGlB;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEca2B,a;;;;;yBAAAA,a;AAAY,O;;;cAAZA;;;kBAhBF,CACP,6CAAAC,YADO,EAEP,iDAAAC,iBAAA,UAFO,EAGP,6CAAAC,YAAA,UAAsB,CAAC;AACrBC,mBAAS,EAAE,gDAAAjB,eADU;AAErBkB,cAAI,EAAE,EAFe;AAGrBC,kBAAQ,EAAE,CAAC;AACTF,qBAAS,EAAE,6CAAAhC,aADF;AAETiC,gBAAI,EAAE;AAFG,WAAD,EAGP;AACDD,qBAAS,EAAE,oDAAAG,mBADV;AAEDF,gBAAI,EAAE;AAFL,WAHO;AAHW,SAAD,CAAtB,CAHO,C;;;;4HAgBEL,a,EAAY;AAAA,yBAjBR,gDAAAb,eAiBQ,EAjBS,6CAAAf,aAiBT,EAjBwB,oDAAAmC,mBAiBxB;AAjB2C,oBAEhE,6CAAAN,YAFgE,EAEpD,kEAFoD,EAEpD,yDAFoD;AAiB3C,S;AAfT,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCLHM,oB;;;;;yBAAAA,oB;AAAmB,O;;;cAAnBA,oB;AAAmB,oC;AAAA,gB;AAAA,e;AAAA,iD;AAAA;AAAA;AAFnB;;AAAG;;AAAY;;AAAmC;;AAAO;;AAAU;;AAAK","file":"src_app_md-menu_md-menu_module_ts-es5.js","sourcesContent":["<h2>About</h2>\r\n<p>This is a product tour library built with Angular (2+). It's inspired by\r\n  <a tourAnchor=\"angular-ui-tour\" href=\"http://benmarch.github.io/angular-ui-tour\">angular-ui-tour</a>.</p>\r\n<p>\r\n  <code>TourMatMenuModule</code> is an implementation of the tour ui that uses\r\n  <a href=\"http://material.angular.io\">Angular Material</a> MatMenu to display tour steps.</p>\r\n\r\n<h2 tourAnchor=\"installation\">Installation</h2>\r\n<ol>\r\n  <li>\r\n    <code>npm install ngx-ui-tour-core ngx-ui-tour-md-menu @angular/animations @angular/cdk @angular/http @angular/material</code>\r\n  </li>\r\n  <li>Import\r\n    <code>TourMatMenuModule.forRoot()</code> into your app module</li>\r\n  <li>Make sure\r\n    <code>RouterModule</code> is imported in your app module</li>\r\n  <li>Make sure Angular Material is\r\n    <a href=\"https://material.angular.io/guide/getting-started\">installed correctly</a>\r\n  </li>\r\n</ol>\r\n\r\n<h2 tourAnchor=\"usage\">Usage</h2>\r\n\r\n<h4>Simple project</h4>\r\n<ol>\r\n  <li>Add\r\n    <code>&lt;tour-step-template&gt;&lt;/tour-step-template&gt;</code> to your root app component</li>\r\n  <li>\r\n    Define anchor points for the tour steps by adding the\r\n    <code>tourAnchor</code> directive throughout your app.\r\n    <pre><code>&lt;div tourAnchor=\"some.anchor.id\"&gt;...&lt;/div&gt;</code></pre>\r\n  </li>\r\n  <li>\r\n    Define your tour steps using\r\n    <code>tourService.initialize(steps)</code>\r\n    <pre>\r\nthis.tourService.initialize([{{ '{' }}\r\n  anchorId: 'some.anchor.id',\r\n  content: 'Some content',\r\n  title: 'First',\r\n}, {{ '{' }}\r\n  anchorId: 'another.anchor.id',\r\n  content: 'Other content',\r\n  title: 'Second',\r\n}]);</pre>\r\n  </li>\r\n  <li>Start the tour with\r\n    <code tourAnchor=\"tourService.start\">tourService.start()</code>\r\n  </li>\r\n  <li>Check out the\r\n    <a href=\"https://github.com/hakimio/ngx-ui-tour/tree/master/src/app/md-menu\">demo source code</a> for an example.</li>\r\n</ol>\r\n\r\n<h4>Lazy loaded modules</h4>\r\n\r\n<ol>\r\n\r\n  <li>\r\n    Add\r\n    <pre><code>&lt;tour-step-template&gt;&lt;/tour-step-template&gt;</code></pre> to your root app component.\r\n  </li>\r\n  <li>\r\n    Import\r\n    <pre><code>TourMatMenuModule.forRoot()</code></pre> into your app module.\r\n  </li>\r\n  <li>\r\n    Import\r\n    <pre><code>TourMatMenuModule</code></pre> into all lazy loaded modules needing the tour.\r\n  </li>\r\n  <li>\r\n    Import the\r\n    <pre><code>TourService</code></pre> in your highest level eagerly loaded component and initialize all your steps there (even the ones in the lazy loaded\r\n    modules).\r\n    <strong>Note:</strong>\r\n    Make sure every step object contains its route. For example, if the route to a step is '/home' then your step object should\r\n    have\r\n    <code>route: '/home'</code> as a member.\r\n  </li>\r\n  <li>\r\n    Define anchor points for your steps by adding the\r\n    <pre><code>tourAnchor</code></pre> directive throughout your modules (any component that requires it at any level).\r\n    <pre><code>&lt;div tourAnchor=\"some.anchor.id\"&gt;...&lt;/div&gt;</code></pre>\r\n  </li>\r\n  <li>\r\n    Start the tour with\r\n    <pre><code>tourService.start()</code></pre> in the same component you initialized your steps. Call this right after the initialization.\r\n  </li>\r\n  <li>Check out the\r\n    <a href=\"https://github.com/hakimio/ngx-ui-tour/tree/master/src/app/md-menu/mat-lazy-tour\">demo source code</a> for an example.\r\n  </li>\r\n\r\n</ol>\r\n\r\n<h2>FAQ</h2>\r\n\r\n<h4>How to center tour step?</h4>\r\n\r\n<p>You can create an invisible anchor point for the tour step you want to center.</p>\r\n<ol>\r\n  <li>Add a simple div to your html template which will be used as the tour anchor\r\n    <pre><code>\r\n&lt;div class=&quot;centered-tour-element&quot; tourAnchor=&quot;start-tour&quot;&gt;&lt;/div&gt;\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Add CSS for the div\r\n    <pre><code>\r\n.centered-tour-element {{\"{\"}}\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  /* The anchor should be translated to the left by half of your step width and half height  */\r\n  /* For example, if your tour step has dimensions of 280 × 156 px, you have to translate by (-140px, -78px) */\r\n  transform: translate(-140px, -78px);\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Use previously defined tour anchor\r\n    <pre><code>\r\nthis.tourService.initialize([{{\"{\"}}\r\n  anchorId: 'start-tour',\r\n  title: 'Welcome',\r\n  content: 'Welcome to the Ngx-UI-Tour tour!'\r\n{{\"}\"}}]);\r\nthis.tourService.start();\r\n    </code></pre>\r\n  </li>\r\n</ol>\r\n\r\n<h4>How to disable main content scrolling when UI tour is active?</h4>\r\n<p>You can toggle CSS class which disables main content element scrolling when tour starts/ends.</p>\r\n<ol>\r\n  <li>\r\n    Create custom <code>TourService</code>:\r\n    <pre><code>\r\n@Injectable()\r\nexport class MyTourService {{\"{\"}}\r\n\r\n  constructor(\r\n    private readonly tourService: TourService\r\n  ) {{\"{\"}}{{\"}\"}}\r\n\r\n  private readonly MAIN_SECTION_CSS_SELECTOR = 'section.main-content';\r\n  private readonly NO_SCROLL_CSS_CLASS = 'no-scroll';\r\n\r\n  start(steps: IStepOption[]) {{\"{\"}}\r\n    this.tourService.initialize(steps, {{\"{\"}}\r\n      route: 'my-route',\r\n      enableBackdrop: true\r\n    {{\"}\"}});\r\n    this.tourService.end$.subscribe(() => this.setIsScrollable(true));\r\n    this.setIsScrollable(false);\r\n    this.tourService.start();\r\n  {{\"}\"}}\r\n\r\n  private setIsScrollable(isScrollable: boolean) {{\"{\"}}\r\n    const body = document.body,\r\n      mainSection = document.querySelector(this.MAIN_SECTION_CSS_SELECTOR),\r\n      addOrRemove = isScrollable ? 'remove' : 'add';\r\n\r\n    mainSection.classList[addOrRemove](this.NO_SCROLL_CSS_CLASS);\r\n    // You can also optionally disable iOS Safari bounce effect\r\n    body[addOrRemove + 'EventListener']('touchmove', this.preventTouchMove, {{\"{\"}} passive: false });\r\n  {{\"}\"}}\r\n\r\n  private preventTouchMove(e) {{\"{\"}}\r\n    e.preventDefault();\r\n  {{\"}\"}}\r\n\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Add the <code>no-scroll</code> CSS class to your global stylesheet (<code>styles.(s)css</code>)\r\n    <pre><code>\r\n.no-scroll {{\"{\"}}\r\n  overflow: hidden;\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Use your custom <code>TourService</code> to start the UI tour:\r\n    <pre><code>\r\nimport {{\"{\"}}MyTourService{{\"}\"}} from '@app-utils/my-tour.service';\r\n\r\n@Component({{\"{\"}}\r\n  selector: 'my-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n{{\"}\"}})\r\nexport class AppComponent {{\"{\"}}\r\n\r\n  constructor(\r\n    private readonly myTourService: MyTourService\r\n  ) {{\"{\"}}\r\n    this.myTourService.start([{{\"{\"}}\r\n      anchorId: 'start-tour',\r\n      title: 'Welcome',\r\n      content: 'Welcome to the Ngx-UI-Tour tour!'\r\n    {{\"}\"}}]);\r\n  {{\"}\"}}\r\n\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n</ol>\r\n\r\n<h2>TourService</h2>\r\n<p>The\r\n  <code>TourService</code> controls the tour. Some key functions include:</p>\r\n<dl>\r\n  <dt>start()</dt>\r\n  <dd>Starts the tour</dd>\r\n  <dt>startAt(stepId: number | string)</dt>\r\n  <dd>Start the tour at the step with stepId or at the specified index</dd>\r\n  <dt>end()</dt>\r\n  <dd>Ends the tour</dd>\r\n  <dt>pause()</dt>\r\n  <dd>Pauses the tour</dd>\r\n  <dt>resume()</dt>\r\n  <dd>Resumes the tour</dd>\r\n  <dt>next()</dt>\r\n  <dd>Goes to the next step</dd>\r\n  <dt>prev()</dt>\r\n  <dd>Goes to the previous step</dd>\r\n</dl>\r\n\r\n<h2>Step Configuration</h2>\r\n<p>Each step can have the following properties.</p>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Default</th>\r\n      <th>Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>stepId</td>\r\n      <td>string</td>\r\n      <td>\"\"</td>\r\n      <td>A unique identifier for the step</td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.anchorId\">\r\n      <td>anchorId</td>\r\n      <td>string</td>\r\n      <td>required</td>\r\n      <td>The anchor to which the step will be attached</td>\r\n    </tr>\r\n    <tr>\r\n      <td>title</td>\r\n      <td>string</td>\r\n      <td>\"\"</td>\r\n      <td>The title of the tour step</td>\r\n    </tr>\r\n    <tr>\r\n      <td>content</td>\r\n      <td>string</td>\r\n      <td>\"\"</td>\r\n      <td>The content text of the tour step</td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.enableBackdrop\">\r\n      <td>enableBackdrop</td>\r\n      <td>boolean</td>\r\n      <td>false</td>\r\n      <td>Controls whether to enable active element highlighting</td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.route\">\r\n      <td>route</td>\r\n      <td>string | UrlSegment[]</td>\r\n      <td>undefined</td>\r\n      <td>\r\n        The route to which the tour should navigate before attempting to show this tour step. If undefined, no navigation is attempted.\r\n      </td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.nextStep\">\r\n      <td>nextStep</td>\r\n      <td>number | string</td>\r\n      <td>undefined</td>\r\n      <td>The step index or stepId of the next step. If undefined, the next step in the steps array is used.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>prevStep</td>\r\n      <td>number | string</td>\r\n      <td>undefined</td>\r\n      <td>The step index or stepId of the previous step. If undefined, the previous step in the steps array is used.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <del>placement</del>\r\n      </td>\r\n      <td>N/A</td>\r\n      <td>N/A</td>\r\n      <td>\r\n        Ignored by\r\n        <code>TourMatMenuModule</code>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>preventScrolling</td>\r\n      <td>boolean</td>\r\n      <td>false</td>\r\n      <td>\r\n        Tour steps automatically scroll to the middle of the screen, if they are off the screen when shown. Setting this value to\r\n        true will disable the scroll behavior.\r\n      </td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.buttons.custom\">\r\n      <td>prevBtnTitle</td>\r\n      <td>string</td>\r\n      <td>false</td>\r\n      <td>\r\n        Sets a custom prev button title for a given step. Default is \"Prev\"\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>nextBtnTitle</td>\r\n      <td>string</td>\r\n      <td>false</td>\r\n      <td>\r\n        Sets a custom next button title for a given step. Default is \"Next\"\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>endBtnTitle</td>\r\n      <td>string</td>\r\n      <td>false</td>\r\n      <td>\r\n        Sets a custom end button title for a given step. Default is \"End\"\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><del>waitFor</del></td>\r\n      <td>Promise | Observable</td>\r\n      <td>undefined</td>\r\n      <td>\r\n        [Deprecated: use \"isAsync\" instead]\r\n        Waits for the given Promise or Observable before showing the step contents.\r\n      </td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.isAsync\" *ngIf=\"showIsAsyncConfig\">\r\n      <ng-container >\r\n        <td>isAsync</td>\r\n        <td>boolean</td>\r\n        <td>false</td>\r\n        <td>\r\n          Mark your step as async if anchor element is added to DOM with a delay (ie after data is loaded).\r\n        </td>\r\n      </ng-container>\r\n    </tr>\r\n    <tr>\r\n      <td colspan=\"4\" *ngIf=\"isLoading && !showIsAsyncConfig\">\r\n        <strong>Loading data...</strong>\r\n      </td>\r\n      <td colspan=\"4\" *ngIf=\"!isLoading\" tourAnchor=\"config.fakeData\">\r\n        Fake data: {{fakeData | json}}\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<h2>Defaults</h2>\r\n<p>You can set default values in the\r\n  <code>TourService.initialize</code> function.</p>\r\n<pre>\r\nthis.tourService.initialize(steps, {{ '{' }}\r\n  route: '',\r\n  preventScrolling: true,\r\n});\r\n</pre>\r\n<p>Any value explicitly defined in a step will override the default value.</p>\r\n\r\n<h2 tourAnchor=\"hotkeys\">Hotkeys</h2>\r\n<p>\r\n  Hotkeys are provided using Angular's\r\n  <code>@HostListener</code> decorator. Hotkeys are enabled when the tour starts and disabled when the tour ends.\r\n</p>\r\n<ul>\r\n  <li>\r\n    <strong>left arrow</strong>\r\n    <span> - previous step</span>\r\n  </li>\r\n  <li>\r\n    <strong>right arrow</strong>\r\n    <span> - next step</span>\r\n  </li>\r\n  <li>\r\n    <strong>esc</strong>\r\n    <span> - end tour</span>\r\n  </li>\r\n</ul>\r\n<p>\r\n  You can disable hotkeys by calling\r\n  <code>tourService.disableHotkeys()</code> or re-enable with\r\n  <code>tourService.enableHotkeys()</code>\r\n</p>\r\n\r\n<h2 tourAnchor=\"events\">Event Observables</h2>\r\n<p>The\r\n  <code>TourService</code> emits events that can be subscribed to like this:</p>\r\n<pre>\r\nthis.tourService.initialize$.subscribe((steps: IStepOption[]) => {{ '{' }}\r\n  console.log('tour configured with these steps:', steps);\r\n});\r\n</pre>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Payload</th>\r\n      <th>Emitted When</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>stepShow$</td>\r\n      <td>IStepOption</td>\r\n      <td>A step is shown</td>\r\n    </tr>\r\n    <tr>\r\n      <td>stepHide$</td>\r\n      <td>IStepOption</td>\r\n      <td>A step is hidden</td>\r\n    </tr>\r\n    <tr>\r\n      <td>initialize$</td>\r\n      <td>IStepOption[]</td>\r\n      <td>The tour is configured with a set of steps</td>\r\n    </tr>\r\n    <tr>\r\n      <td>start$</td>\r\n      <td>IStepOption</td>\r\n      <td>The tour begins</td>\r\n    </tr>\r\n    <tr>\r\n      <td>end$</td>\r\n      <td>any</td>\r\n      <td>The tour ends</td>\r\n    </tr>\r\n    <tr>\r\n      <td>pause$</td>\r\n      <td>IStepOption</td>\r\n      <td>The tour is paused</td>\r\n    </tr>\r\n    <tr>\r\n      <td>resume$</td>\r\n      <td>IStepOption</td>\r\n      <td>The tour resumes</td>\r\n    </tr>\r\n    <tr>\r\n      <td>anchorRegister$</td>\r\n      <td>string</td>\r\n      <td>An anchor is registered with the tour</td>\r\n    </tr>\r\n    <tr>\r\n      <td>anchorUnregister$</td>\r\n      <td>string</td>\r\n      <td>An anchor is unregistered from the tour</td>\r\n    </tr>\r\n    <tr>\r\n      <td>startWaiting$</td>\r\n      <td>IStepOption</td>\r\n      <td>Starts waiting for async step (\"isAsync\" or \"waitFor\" configs set)</td>\r\n    </tr>\r\n    <tr>\r\n      <td>stopWaiting$</td>\r\n      <td>IStepOption</td>\r\n      <td>Async anchor is registered or \"waitFor\" config Promise/Observable completes</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<h2 tourAnchor=\"template\">Custom template</h2>\r\n<p>\r\n  You can also customize the tour step template by providing an\r\n  <code>&lt;ng-template let-step=\"step\" &gt;</code> inside the\r\n  <code>&lt;tour-step-template&gt;</code>\r\n</p>\r\n<p>\r\n  The default template is equivalent to this:\r\n</p>\r\n<pre><code>&lt;tour-step-template&gt;\r\n  &lt;ng-template let-step=\"step\"&gt;\r\n    &lt;mat-card (click)=\"$event.stopPropagation()\"&gt;\r\n      &lt;mat-card-title&gt;\r\n        {{ '{{' }}step?.title}}\r\n      &lt;/mat-card-title&gt;\r\n      &lt;mat-card-content&gt;\r\n        {{ '{{' }}step?.content}}\r\n      &lt;/mat-card-content&gt;\r\n      &lt;mat-card-actions&gt;\r\n        &lt;button mat-icon-button [disabled]=\"!tourService.hasPrev(step)\" (click)=\"tourService.prev()\"&gt;\r\n          &lt;mat-icon&gt;chevron_left&lt;/mat-icon&gt;\r\n        &lt;/button&gt;\r\n        &lt;button mat-icon-button [disabled]=\"!tourService.hasNext(step)\" (click)=\"tourService.next()\"&gt;\r\n          &lt;mat-icon&gt;chevron_right&lt;/mat-icon&gt;\r\n        &lt;/button&gt;\r\n        &lt;button mat-button (click)=\"tourService.end()\"&gt;{{ '{{' }}step?.endBtnTitle}}&lt;/button&gt;\r\n      &lt;/mat-card-actions&gt;\r\n    &lt;/mat-card&gt;\r\n  &lt;/ng-template&gt;\r\n&lt;/tour-step-template&gt;\r\n</code></pre>\r\n\r\n<h2>Styling Active Tour Anchor</h2>\r\n<p>\r\n  The currently active tour anchor element has a\r\n  <code>touranchor--is-active</code> class applied to it, so you can apply your own custom styles to that class to highlight the element being referenced.\r\n</p>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {of, Subscription} from 'rxjs';\r\nimport {TourService} from 'ngx-ui-tour-md-menu';\r\nimport {delay} from 'rxjs/operators';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'docs',\r\n  templateUrl: './docs.component.html',\r\n})\r\nexport class DocsComponent implements OnInit, OnDestroy {\r\n\r\n  isLoading = true;\r\n  showIsAsyncConfig = true;\r\n  fakeData: number[];\r\n  startWaitingSubscription: Subscription;\r\n\r\n  constructor(\r\n    private readonly tourService: TourService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscribeToShowStep();\r\n  }\r\n\r\n  subscribeToShowStep() {\r\n    this.startWaitingSubscription = this.tourService\r\n      .startWaiting$\r\n      .subscribe(() => this.loadData());\r\n  }\r\n\r\n  loadData() {\r\n    this.showIsAsyncConfig = false;\r\n    of([1, 2, 3])\r\n      .pipe(delay(1000))\r\n      .subscribe(result => {\r\n        this.isLoading = false;\r\n        this.fakeData = result;\r\n        this.showIsAsyncConfig = true;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.startWaitingSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<a href=\"https://github.com/hakimio/ngx-ui-tour\" class=\"btn btn-default\"\r\n  >View on GitHub</a\r\n>\r\n<a\r\n  style=\"cursor: pointer\"\r\n  (click)=\"tourService.toggle()\"\r\n  class=\"btn btn-primary\"\r\n  tourAnchor=\"start.tour\"\r\n  >Start Demo Tour</a\r\n>\r\n\r\n<router-outlet></router-outlet>\r\n<tour-step-template> </tour-step-template>\r\n<ng-template #jsonTemplate let-step=\"step\">\r\n  {{ step | json }}\r\n</ng-template>\r\n","import { TourService } from 'ngx-ui-tour-md-menu';\r\nimport {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'md-menu-route',\r\n  templateUrl: './md-menu.component.html',\r\n})\r\nexport class MdMenuComponent implements OnInit {\r\n\r\n  constructor(\r\n    public tourService: TourService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.tourService.initialize([{\r\n      anchorId: 'start.tour',\r\n      content: 'Welcome to the Ngx-UI-Tour tour!',\r\n      placement: 'below',\r\n      title: 'Welcome',\r\n    }, {\r\n      anchorId: 'angular-ui-tour',\r\n      content: 'Thanks to angular-ui-tour for the inspiration for the library',\r\n      route: '',\r\n      title: 'angular-ui-tour',\r\n    }, {\r\n      anchorId: 'installation',\r\n      content: 'First, install the library...',\r\n      title: 'Installation',\r\n    }, {\r\n      anchorId: 'usage',\r\n      content: '...then use it.',\r\n      title: 'Usage',\r\n    }, {\r\n      anchorId: 'tourService.start',\r\n      content: 'Don\\'t forget to actually start the tour.',\r\n      title: 'Start the tour',\r\n    }, {\r\n      anchorId: 'config.anchorId',\r\n      content: 'Every step needs an anchor.',\r\n      title: 'Anchor',\r\n    }, {\r\n      anchorId: 'config.enableBackdrop',\r\n      content: 'You can enable backdrop to highlight active element.',\r\n      title: 'Backdrop',\r\n      enableBackdrop: true\r\n    }, {\r\n      anchorId: 'config.route',\r\n      content: 'Tours can span multiple routes.',\r\n      title: 'Route',\r\n    }, {\r\n      anchorId: 'another.route',\r\n      content: 'Like this!',\r\n      route: 'other',\r\n      title: 'Another Route',\r\n    }, {\r\n      anchorId: 'config.route',\r\n      content: 'And then back again.',\r\n      placement: 'below',\r\n      title: 'Route Return',\r\n    }, {\r\n      anchorId: 'config.buttons.custom',\r\n      content: 'You can set custom step button names',\r\n      title: 'Button Titles',\r\n      prevBtnTitle: 'My Prev',\r\n      nextBtnTitle: 'My Next',\r\n      endBtnTitle: 'My End'\r\n    }, {\r\n      anchorId: 'config.isAsync',\r\n      content: 'Mark your step as async if anchor element is added to DOM with a delay',\r\n      title: 'Wait for async event'\r\n    }, {\r\n      anchorId: 'config.fakeData',\r\n      content: 'Your fake data finished loading',\r\n      title: 'Loading finished',\r\n      isAsync: true\r\n    }, {\r\n      anchorId: 'hotkeys',\r\n      content: 'Try using the hotkeys to navigate through the tour.',\r\n      title: 'Hotkeys',\r\n    }, {\r\n      anchorId: 'events',\r\n      content: 'You can subscribe to events',\r\n      title: 'Events',\r\n    }], {\r\n      route: 'md-menu',\r\n    });\r\n    this.tourService.start();\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TourMatMenuModule } from 'ngx-ui-tour-md-menu';\r\n\r\nimport { DocsComponent } from './docs.component';\r\nimport { MdMenuComponent } from './md-menu.component';\r\nimport { OtherRouteComponent } from './other-route.component';\r\n\r\n@NgModule({\r\n  declarations: [MdMenuComponent, DocsComponent, OtherRouteComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TourMatMenuModule.forRoot(),\r\n    RouterModule.forChild([{\r\n      component: MdMenuComponent,\r\n      path: '',\r\n      children: [{\r\n        component: DocsComponent,\r\n        path: '',\r\n      }, {\r\n        component: OtherRouteComponent,\r\n        path: 'other',\r\n      }]\r\n    }]),\r\n  ],\r\n})\r\nexport class MdMenuModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'other-route',\r\n  template: `<p>This is the <strong tourAnchor=\"another.route\">another</strong> route</p>`,\r\n})\r\nexport class OtherRouteComponent {\r\n}\r\n"]}