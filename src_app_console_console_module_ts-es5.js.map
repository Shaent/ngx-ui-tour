{"version":3,"sources":["webpack:///dist/projects/ngx-ui-tour-console/src/lib/tour-anchor.directive.ts","webpack:///dist/projects/ngx-ui-tour-console/src/lib/console.module.ts","webpack:///dist/projects/ngx-ui-tour-console/src/public_api.ts","webpack:///dist/projects/ngx-ui-tour-console/src/ngx-ui-tour-console.ts","webpack:///src/app/console/console.component.ts","webpack:///src/app/console/console.component.html","webpack:///src/app/console/console.module.ts","webpack:///src/app/console/docs.component.html","webpack:///src/app/console/docs.component.ts","webpack:///src/app/console/other-route.component.ts"],"names":["TourAnchorConsoleDirective","tourService","element","tourBackdrop","register","tourAnchor","unregister","step","htmlElement","nativeElement","preventScrolling","ScrollingUtil","enableBackdrop","show","close","console","group","title","log","content","placement","groupEnd","getStatus","TourState","TourService","ElementRef","TourBackdropService","Input","TourConsoleModule","ngModule","providers","ConsoleComponent","initialize","anchorId","route","isAsync","start","ConsoleModule","CommonModule","RouterModule","component","path","children","DocsComponent","OtherRouteComponent","isLoading","showIsAsyncConfig","subscribeToShowStep","startWaitingSubscription","startWaiting$","subscribe","loadData","of","pipe","delay","result","fakeData","unsubscribe"],"mappings":"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","file":"src_app_console_console_module_ts-es5.js","sourcesContent":["import {\r\n  TourAnchorDirective,\r\n  TourService,\r\n  IStepOption,\r\n  ScrollingUtil,\r\n  TourBackdropService,\r\n  TourState\r\n} from 'ngx-ui-tour-core';\r\nimport {Directive, ElementRef, Input, OnDestroy, OnInit} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[tourAnchor]',\r\n})\r\nexport class TourAnchorConsoleDirective implements OnInit, OnDestroy, TourAnchorDirective {\r\n  @Input() public tourAnchor: string;\r\n\r\n  constructor(\r\n      private tourService: TourService,\r\n      private element: ElementRef,\r\n      private tourBackdrop: TourBackdropService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.tourService.register(this.tourAnchor, this);\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.tourService.unregister(this.tourAnchor);\r\n  }\r\n\r\n  // noinspection JSUnusedGlobalSymbols\r\n  public showTourStep(step: IStepOption): void {\r\n    const htmlElement: HTMLElement = this.element.nativeElement;\r\n\r\n    if (!step.preventScrolling) {\r\n      ScrollingUtil.ensureVisible(htmlElement);\r\n    }\r\n\r\n    if (step.enableBackdrop) {\r\n      this.tourBackdrop.show(this.element);\r\n    } else {\r\n      this.tourBackdrop.close();\r\n    }\r\n\r\n    console.group(step.title);\r\n    console.log(step.content);\r\n    console.log(`${step.placement || 'above'} ${this.tourAnchor}`);\r\n    console.groupEnd();\r\n  }\r\n\r\n  public hideTourStep(): void {\r\n    if (this.tourService.getStatus() === TourState.OFF) {\r\n      this.tourBackdrop.close();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TourHotkeyListenerComponent, TourModule, TourService, TourBackdropService } from 'ngx-ui-tour-core';\r\n\r\nimport { TourAnchorConsoleDirective } from './tour-anchor.directive';\r\n\r\nexport { TourAnchorConsoleDirective, TourService };\r\n\r\n@NgModule({\r\n  declarations: [TourAnchorConsoleDirective],\r\n  exports: [TourAnchorConsoleDirective, TourHotkeyListenerComponent],\r\n  imports: [TourModule, CommonModule, NgbPopoverModule],\r\n})\r\nexport class TourConsoleModule {\r\n  public static forRoot(): ModuleWithProviders<TourConsoleModule> {\r\n    return {\r\n      ngModule: TourConsoleModule,\r\n      providers: [\r\n        TourService,\r\n        TourBackdropService\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-ui-tour-console\r\n */\r\n\r\nexport * from 'ngx-ui-tour-core';\r\nexport {\r\n  TourConsoleModule,\r\n  TourAnchorConsoleDirective\r\n} from './lib/console.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","import { TourService } from 'ngx-ui-tour-console';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'console-route',\r\n  templateUrl: './console.component.html',\r\n})\r\nexport class ConsoleComponent {\r\n  constructor(public tourService: TourService) {\r\n    this.tourService.initialize([{\r\n      anchorId: 'start.tour',\r\n      content: 'Welcome to the Ngx-UI-Tour tour!',\r\n      placement: 'below',\r\n      title: 'Welcome',\r\n    }, {\r\n      anchorId: 'angular-ui-tour',\r\n      content: 'Thanks to angular-ui-tour for the inspiration for the library',\r\n      title: 'angular-ui-tour',\r\n    }, {\r\n      anchorId: 'installation',\r\n      content: 'First, install the library...',\r\n      title: 'Installation',\r\n    }, {\r\n      anchorId: 'usage',\r\n      content: '...then use it.',\r\n      title: 'Usage',\r\n    }, {\r\n      anchorId: 'tourService.start',\r\n      content: 'Don\\'t forget to actually start the tour.',\r\n      title: 'Start the tour',\r\n    }, {\r\n      anchorId: 'config.anchorId',\r\n      content: 'Every step needs an anchor.',\r\n      title: 'Anchor',\r\n    }, {\r\n      anchorId: 'config.enableBackdrop',\r\n      content: 'You can enable backdrop to highlight active element.',\r\n      title: 'Backdrop',\r\n      enableBackdrop: true\r\n    }, {\r\n      anchorId: 'config.route',\r\n      content: 'Tours can span multiple routes.',\r\n      title: 'Route',\r\n    }, {\r\n      anchorId: 'another.route',\r\n      content: 'Like this!',\r\n      route: 'console/other',\r\n      title: 'Another Route',\r\n    }, {\r\n      anchorId: 'config.route',\r\n      content: 'And then back again.',\r\n      placement: 'below',\r\n      title: 'Route Return',\r\n    }, {\r\n      anchorId: 'config.isAsync',\r\n      content: 'Mark your step as async if anchor element is added to DOM with a delay',\r\n      title: 'Wait for async event'\r\n    }, {\r\n      anchorId: 'config.fakeData',\r\n      content: 'Your fake data finished loading',\r\n      title: 'Loading finished',\r\n      isAsync: true\r\n    }, {\r\n      anchorId: 'hotkeys',\r\n      content: 'Try using the hotkeys to navigate through the tour.',\r\n      title: 'Hotkeys',\r\n    }, {\r\n      anchorId: 'events',\r\n      content: 'You can subscribe to events',\r\n      title: 'Events',\r\n    }], {\r\n      route: 'console',\r\n    });\r\n    this.tourService.start();\r\n  }\r\n}\r\n","<a href=\"https://github.com/hakimio/ngx-ui-tour\" class=\"btn btn-default\">View on GitHub</a>\r\n<a style=\"cursor: pointer\" (click)=\"tourService.toggle()\" class=\"btn btn-primary\" tourAnchor=\"start.tour\">Start Demo Tour</a>\r\n<a style=\"cursor: pointer\" (click)=\"tourService.prev()\" class=\"btn btn-default\">Prev</a>\r\n<a style=\"cursor: pointer\" (click)=\"tourService.next()\" class=\"btn btn-default\">Next</a>\r\n\r\n<router-outlet></router-outlet>\r\n<tour-hotkey-listener></tour-hotkey-listener>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TourConsoleModule } from 'ngx-ui-tour-console';\r\n\r\nimport { ConsoleComponent } from './console.component';\r\nimport { DocsComponent } from './docs.component';\r\nimport { OtherRouteComponent } from './other-route.component';\r\n\r\n@NgModule({\r\n  declarations: [ConsoleComponent, DocsComponent, OtherRouteComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([{\r\n      component: ConsoleComponent,\r\n      path: '',\r\n      children: [{\r\n        component: DocsComponent,\r\n        path: '',\r\n      }, {\r\n        component: OtherRouteComponent,\r\n        path: 'other',\r\n      }]\r\n    }]),\r\n    TourConsoleModule.forRoot()\r\n  ],\r\n})\r\nexport class ConsoleModule { }\r\n","<h2>About</h2>\r\n<p>This is a product tour library built with Angular (2+). It's inspired by\r\n  <a tourAnchor=\"angular-ui-tour\" href=\"http://benmarch.github.io/angular-ui-tour\">angular-ui-tour</a>.</p>\r\n<p>\r\n  <code>TourConsoleModule</code> is a minimal implementation of the tour ui that uses only the browser's console to display tour steps.</p>\r\n\r\n<h2 tourAnchor=\"installation\">Installation</h2>\r\n<ol>\r\n  <li>\r\n    <code>npm install ngx-ui-tour-core ngx-ui-tour-console</code>\r\n  </li>\r\n  <li>import\r\n    <code>TourConsoleModule.forRoot()</code> into your app module</li>\r\n</ol>\r\n\r\n<h2 tourAnchor=\"usage\">Usage</h2>\r\n<ol>\r\n  <li>\r\n    Define anchor points for the tour steps by adding the\r\n    <code>tourAnchor</code> directive throughout your app.\r\n    <pre><code>&lt;div tourAnchor=\"some.anchor.id\"&gt;...&lt;/div&gt;</code></pre>\r\n  </li>\r\n  <li>\r\n    Define your tour steps using\r\n    <code>tourService.initialize(steps)</code>\r\n    <pre>\r\nthis.tourService.initialize([{{ '{' }}\r\n  anchorId: 'some.anchor.id',\r\n  content: 'Some content',\r\n  title: 'First',\r\n}, {{ '{' }}\r\n  anchorId: 'another.anchor.id',\r\n  content: 'Other content',\r\n  title: 'Second',\r\n}]);</pre>\r\n  </li>\r\n  <li>Start the tour with\r\n    <code tourAnchor=\"tourService.start\">tourService.start()</code>\r\n  </li>\r\n  <li>Check out the\r\n    <a href=\"https://github.com/hakimio/ngx-ui-tour/tree/master/src/app/console\">demo source code</a> for an example.</li>\r\n</ol>\r\n\r\n<h2>FAQ</h2>\r\n\r\n<h4>How to center tour step?</h4>\r\n\r\n<p>You can create an invisible anchor point for the tour step you want to center.</p>\r\n<ol>\r\n  <li>Add a simple div to your html template which will be used as the tour anchor\r\n    <pre><code>\r\n&lt;div class=&quot;centered-tour-element&quot; tourAnchor=&quot;start-tour&quot;&gt;&lt;/div&gt;\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Add CSS for the div\r\n    <pre><code>\r\n.centered-tour-element {{\"{\"}}\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  /* The anchor should be translated to the left by half of your step width and half height  */\r\n  /* For example, if your tour step has dimensions of 280 × 156 px, you have to translate by (-140px, -78px) */\r\n  transform: translate(-140px, -78px);\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Use previously defined tour anchor\r\n    <pre><code>\r\nthis.tourService.initialize([{{\"{\"}}\r\n  anchorId: 'start-tour',\r\n  title: 'Welcome',\r\n  content: 'Welcome to the Ngx-UI-Tour tour!'\r\n{{\"}\"}}]);\r\nthis.tourService.start();\r\n    </code></pre>\r\n  </li>\r\n</ol>\r\n\r\n<h4>How to disable main content scrolling when UI tour is active?</h4>\r\n<p>You can toggle CSS class which disables main content element scrolling when tour starts/ends.</p>\r\n<ol>\r\n  <li>\r\n    Create custom <code>TourService</code>:\r\n    <pre><code>\r\n@Injectable()\r\nexport class MyTourService {{\"{\"}}\r\n\r\n  constructor(\r\n    private readonly tourService: TourService\r\n  ) {{\"{\"}}{{\"}\"}}\r\n\r\n  private readonly MAIN_SECTION_CSS_SELECTOR = 'section.main-content';\r\n  private readonly NO_SCROLL_CSS_CLASS = 'no-scroll';\r\n\r\n  start(steps: IStepOption[]) {{\"{\"}}\r\n      this.tourService.initialize(steps, {{\"{\"}}\r\n      route: 'my-route',\r\n      enableBackdrop: true\r\n    {{\"}\"}});\r\n    this.tourService.end$.subscribe(() => this.setIsScrollable(true));\r\n    this.setIsScrollable(false);\r\n    this.tourService.start();\r\n  {{\"}\"}}\r\n\r\n  private setIsScrollable(isScrollable: boolean) {{\"{\"}}\r\n    const body = document.body,\r\n      mainSection = document.querySelector(this.MAIN_SECTION_CSS_SELECTOR),\r\n      addOrRemove = isScrollable ? 'remove' : 'add';\r\n\r\n    mainSection.classList[addOrRemove](this.NO_SCROLL_CSS_CLASS);\r\n    // You can also optionally disable iOS Safari bounce effect\r\n    body[addOrRemove + 'EventListener']('touchmove', this.preventTouchMove, {{\"{\"}} passive: false });\r\n  {{\"}\"}}\r\n\r\n  private preventTouchMove(e) {{\"{\"}}\r\n    e.preventDefault();\r\n  {{\"}\"}}\r\n\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Add the <code>no-scroll</code> CSS class to your global stylesheet (<code>styles.(s)css</code>)\r\n    <pre><code>\r\n.no-scroll {{\"{\"}}\r\n  overflow: hidden;\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Use your custom <code>TourService</code> to start the UI tour:\r\n    <pre><code>\r\nimport {{\"{\"}}MyTourService{{\"}\"}} from '@app-utils/my-tour.service';\r\n\r\n@Component({{\"{\"}}\r\n  selector: 'my-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n{{\"}\"}})\r\nexport class AppComponent {{\"{\"}}\r\n\r\n  constructor(\r\n    private readonly myTourService: MyTourService\r\n  ) {{\"{\"}}\r\n    this.myTourService.start([{{\"{\"}}\r\n      anchorId: 'start-tour',\r\n      title: 'Welcome',\r\n      content: 'Welcome to the Ngx-UI-Tour tour!'\r\n    {{\"}\"}}]);\r\n  {{\"}\"}}\r\n\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n</ol>\r\n\r\n<h2>TourService</h2>\r\n<p>The\r\n  <code>TourService</code> controls the tour. Some key functions include:</p>\r\n<dl>\r\n  <dt>start()</dt>\r\n  <dd>Starts the tour</dd>\r\n  <dt>startAt(stepId: number | string)</dt>\r\n  <dd>Start the tour at the step with stepId or at the specified index</dd>\r\n  <dt>end()</dt>\r\n  <dd>Ends the tour</dd>\r\n  <dt>pause()</dt>\r\n  <dd>Pauses the tour</dd>\r\n  <dt>resume()</dt>\r\n  <dd>Resumes the tour</dd>\r\n  <dt>next()</dt>\r\n  <dd>Goes to the next step</dd>\r\n  <dt>prev()</dt>\r\n  <dd>Goes to the previous step</dd>\r\n</dl>\r\n\r\n<h2>Step Configuration</h2>\r\n<p>Each step can have the following properties.</p>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Default</th>\r\n      <th>Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>stepId</td>\r\n      <td>string</td>\r\n      <td>\"\"</td>\r\n      <td>A unique identifier for the step</td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.anchorId\">\r\n      <td>anchorId</td>\r\n      <td>string</td>\r\n      <td>required</td>\r\n      <td>The anchor to which the step will be attached</td>\r\n    </tr>\r\n    <tr>\r\n      <td>title</td>\r\n      <td>string</td>\r\n      <td>\"\"</td>\r\n      <td>The title of the tour step</td>\r\n    </tr>\r\n    <tr>\r\n      <td>content</td>\r\n      <td>string</td>\r\n      <td>\"\"</td>\r\n      <td>The content text of the tour step</td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.enableBackdrop\">\r\n      <td>enableBackdrop</td>\r\n      <td>boolean</td>\r\n      <td>false</td>\r\n      <td>Controls whether to enable active element highlighting</td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.route\">\r\n      <td>route</td>\r\n      <td>string | UrlSegment[]</td>\r\n      <td>undefined</td>\r\n      <td>\r\n        The route to which the tour should navigate before attempting to show this tour step. If undefined, no navigation is attempted.\r\n      </td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.nextStep\">\r\n      <td>nextStep</td>\r\n      <td>number | string</td>\r\n      <td>undefined</td>\r\n      <td>The step index or stepId of the next step. If undefined, the next step in the steps array is used.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>prevStep</td>\r\n      <td>number | string</td>\r\n      <td>undefined</td>\r\n      <td>The step index or stepId of the previous step. If undefined, the previous step in the steps array is used.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>preventScrolling</td>\r\n      <td>boolean</td>\r\n      <td>false</td>\r\n      <td>\r\n        Tour steps automatically scroll to the middle of the screen, if they are off the screen when shown. Setting this value to\r\n        true will disable the scroll behavior.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>waitFor</td>\r\n      <td>Promise | Observable</td>\r\n      <td>undefined</td>\r\n      <td>\r\n        [Deprecated: use \"isAsync\" instead]\r\n        Waits for the given Promise or Observable before showing the step contents.\r\n      </td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.isAsync\" *ngIf=\"showIsAsyncConfig\">\r\n      <ng-container >\r\n        <td>isAsync</td>\r\n        <td>boolean</td>\r\n        <td>false</td>\r\n        <td>\r\n          Mark your step as async if anchor element is added to DOM with a delay (ie after data is loaded).\r\n        </td>\r\n      </ng-container>\r\n    </tr>\r\n    <tr>\r\n      <td colspan=\"4\" *ngIf=\"isLoading && !showIsAsyncConfig\">\r\n        <strong>Loading data...</strong>\r\n      </td>\r\n      <td colspan=\"4\" *ngIf=\"!isLoading\" tourAnchor=\"config.fakeData\">\r\n        Fake data: {{fakeData | json}}\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<h2>Defaults</h2>\r\n<p>You can set default values in the\r\n  <code>TourService.initialize</code> function.</p>\r\n<pre>\r\nthis.tourService.initialize(steps, {{ '{' }}\r\n  route: '',\r\n  placement: 'left',\r\n  preventScrolling: true,\r\n});\r\n</pre>\r\n<p>Any value explicitly defined in a step will override the default value.</p>\r\n\r\n<h2 tourAnchor=\"hotkeys\">Hotkeys</h2>\r\n<p>\r\n  Hotkeys are provided using Angular's\r\n  <code>@HostListener</code> decorator. Hotkeys are enabled when the tour starts and disabled when the tour ends.\r\n</p>\r\n<ul>\r\n  <li>\r\n    <strong>left arrow</strong>\r\n    <span> - previous step</span>\r\n  </li>\r\n  <li>\r\n    <strong>right arrow</strong>\r\n    <span> - next step</span>\r\n  </li>\r\n  <li>\r\n    <strong>esc</strong>\r\n    <span> - end tour</span>\r\n  </li>\r\n</ul>\r\n<p>\r\n  You can disable hotkeys by calling\r\n  <code>tourService.disableHotkeys()</code> or re-enable with\r\n  <code>tourService.enableHotkeys()</code>\r\n</p>\r\n\r\n<h2 tourAnchor=\"events\">Event Observables</h2>\r\n<p>The\r\n  <code>TourService</code> emits events that can be subscribed to like this:</p>\r\n<pre>\r\nthis.tourService.initialize$.subscribe((steps: IStepOption[]) => {{ '{' }}\r\n  console.log('tour configured with these steps:', steps);\r\n});\r\n</pre>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Payload</th>\r\n      <th>Emitted When</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>stepShow$</td>\r\n      <td>IStepOption</td>\r\n      <td>A step is shown</td>\r\n    </tr>\r\n    <tr>\r\n      <td>stepHide$</td>\r\n      <td>IStepOption</td>\r\n      <td>A step is hidden</td>\r\n    </tr>\r\n    <tr>\r\n      <td>initialize$</td>\r\n      <td>IStepOption[]</td>\r\n      <td>The tour is configured with a set of steps</td>\r\n    </tr>\r\n    <tr>\r\n      <td>start$</td>\r\n      <td>IStepOption</td>\r\n      <td>The tour begins</td>\r\n    </tr>\r\n    <tr>\r\n      <td>end$</td>\r\n      <td>any</td>\r\n      <td>The tour ends</td>\r\n    </tr>\r\n    <tr>\r\n      <td>pause$</td>\r\n      <td>IStepOption</td>\r\n      <td>The tour is paused</td>\r\n    </tr>\r\n    <tr>\r\n      <td>resume$</td>\r\n      <td>IStepOption</td>\r\n      <td>The tour resumes</td>\r\n    </tr>\r\n    <tr>\r\n      <td>anchorRegister$</td>\r\n      <td>string</td>\r\n      <td>An anchor is registered with the tour</td>\r\n    </tr>\r\n    <tr>\r\n      <td>anchorUnregister$</td>\r\n      <td>string</td>\r\n      <td>An anchor is unregistered from the tour</td>\r\n    </tr>\r\n    <tr>\r\n      <td>startWaiting$</td>\r\n      <td>IStepOption</td>\r\n      <td>Starts waiting for async step (\"isAsync\" or \"waitFor\" configs set)</td>\r\n    </tr>\r\n    <tr>\r\n      <td>stopWaiting$</td>\r\n      <td>IStepOption</td>\r\n      <td>Async anchor is registered or \"waitFor\" config Promise/Observable completes</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {of, Subscription} from 'rxjs';\r\nimport {TourService} from 'ngx-ui-tour-console';\r\nimport {delay} from 'rxjs/operators';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'docs',\r\n  templateUrl: './docs.component.html',\r\n})\r\nexport class DocsComponent implements OnInit, OnDestroy {\r\n\r\n  isLoading = true;\r\n  showIsAsyncConfig = true;\r\n  fakeData: number[];\r\n  startWaitingSubscription: Subscription;\r\n\r\n  constructor(\r\n    private readonly tourService: TourService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscribeToShowStep();\r\n  }\r\n\r\n  subscribeToShowStep() {\r\n    this.startWaitingSubscription = this.tourService\r\n      .startWaiting$\r\n      .subscribe(() => this.loadData());\r\n  }\r\n\r\n  loadData() {\r\n    this.showIsAsyncConfig = false;\r\n    of([1, 2, 3])\r\n      .pipe(delay(1000))\r\n      .subscribe(result => {\r\n        this.isLoading = false;\r\n        this.fakeData = result;\r\n        this.showIsAsyncConfig = true;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.startWaitingSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'other-route',\r\n  template: `<p>This is the <strong tourAnchor=\"another.route\">another</strong> route</p>`,\r\n})\r\nexport class OtherRouteComponent {\r\n}\r\n"]}