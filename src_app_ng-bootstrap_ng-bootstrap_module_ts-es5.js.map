{"version":3,"sources":["webpack:///dist/projects/ngx-ui-tour-ng-bootstrap/src/lib/ng-bootstrap-tour.service.ts","webpack:///dist/projects/ngx-ui-tour-ng-bootstrap/src/lib/tour-step-template.service.ts","webpack:///dist/projects/ngx-ui-tour-ng-bootstrap/src/lib/tour-anchor.directive.ts","webpack:///dist/projects/ngx-ui-tour-ng-bootstrap/src/lib/tour-step-template.component.ts","webpack:///dist/projects/ngx-ui-tour-ng-bootstrap/src/lib/ng-bootstrap.module.ts","webpack:///dist/projects/ngx-ui-tour-ng-bootstrap/src/public_api.ts","webpack:///dist/projects/ngx-ui-tour-ng-bootstrap/src/ngx-ui-tour-ng-bootstrap.ts","webpack:///src/app/ng-bootstrap/docs.component.html","webpack:///src/app/ng-bootstrap/docs.component.ts","webpack:///src/app/ng-bootstrap/ng-bootstrap.component.ts","webpack:///src/app/ng-bootstrap/ng-bootstrap.component.html","webpack:///src/app/ng-bootstrap/ng-bootstrap.module.ts","webpack:///src/app/ng-bootstrap/other-route.component.ts"],"names":["NgbTourService","TourService","TourStepTemplateService","TourAnchorNgBootstrapPopoverDirective","NgbPopover","TourAnchorNgBootstrapDirective","tourService","tourStepTemplate","element","popoverDirective","tourBackdrop","autoClose","triggers","toggle","register","tourAnchor","unregister","step","htmlElement","nativeElement","isActive","ngbPopover","template","popoverTitle","title","container","placement","replace","prevBtnTitle","nextBtnTitle","endBtnTitle","open","preventScrolling","ScrollingUtil","enableBackdrop","show","close","getStatus","TourState","ElementRef","Host","TourBackdropService","Input","HostBinding","TourStepTemplateComponent","tourStepTemplateService","stepTemplate","stepTemplateContent","defaultTourStepTemplate","TourHotkeyListenerComponent","ViewChild","read","TemplateRef","ContentChild","TourNgBootstrapModule","ngModule","providers","DocsComponent","isLoading","showIsAsyncConfig","subscribeToShowStep","startWaitingSubscription","startWaiting$","subscribe","loadData","of","pipe","delay","result","fakeData","unsubscribe","NgBootstrapComponent","initialize","anchorId","content","route","isAsync","start","NgBootstrapModule","CommonModule","RouterModule","component","path","children","OtherRouteComponent"],"mappings":"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","file":"src_app_ng-bootstrap_ng-bootstrap_module_ts-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { TourService } from 'ngx-ui-tour-core';\r\n\r\nimport { INgbStepOption } from './step-option.interface';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n  })\r\nexport class NgbTourService extends TourService<INgbStepOption> {}\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TourStepTemplateService {\r\n  public template: TemplateRef<{content: string}>;\r\n}\r\n","import { Directive, ElementRef, Host, HostBinding, Input } from '@angular/core';\r\nimport type {OnDestroy, OnInit} from '@angular/core';\r\nimport { NgbPopover, Placement } from '@ng-bootstrap/ng-bootstrap';\r\nimport {ScrollingUtil, TourAnchorDirective, TourBackdropService, TourState} from 'ngx-ui-tour-core';\r\n\r\nimport { NgbTourService } from './ng-bootstrap-tour.service';\r\nimport { INgbStepOption } from './step-option.interface';\r\nimport { TourStepTemplateService } from './tour-step-template.service';\r\n\r\n\r\n@Directive({ selector: '[tourAnchor]' })\r\nexport class TourAnchorNgBootstrapPopoverDirective extends NgbPopover { }\r\n\r\n@Directive({\r\n  selector: '[tourAnchor]',\r\n})\r\nexport class TourAnchorNgBootstrapDirective implements OnInit, OnDestroy, TourAnchorDirective {\r\n  @Input() public tourAnchor: string;\r\n\r\n  @HostBinding('class.touranchor--is-active')\r\n  public isActive: boolean;\r\n\r\n  constructor(\r\n    private tourService: NgbTourService,\r\n    private tourStepTemplate: TourStepTemplateService,\r\n    private element: ElementRef,\r\n    @Host() private popoverDirective: TourAnchorNgBootstrapPopoverDirective,\r\n    private tourBackdrop: TourBackdropService\r\n  ) {\r\n    this.popoverDirective.autoClose = false;\r\n    this.popoverDirective.triggers = '';\r\n    this.popoverDirective.toggle = () => { };\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.tourService.register(this.tourAnchor, this);\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.tourService.unregister(this.tourAnchor);\r\n  }\r\n\r\n  // noinspection JSUnusedGlobalSymbols\r\n  public showTourStep(step: INgbStepOption): void {\r\n    const htmlElement: HTMLElement = this.element.nativeElement;\r\n\r\n    this.isActive = true;\r\n    this.popoverDirective.ngbPopover = this.tourStepTemplate.template;\r\n    this.popoverDirective.popoverTitle = step.title;\r\n    this.popoverDirective.container =  'body';\r\n    this.popoverDirective.placement = <Placement>(step.placement || 'top')\r\n      .replace('before', 'left').replace('after', 'right')\r\n      .replace('below', 'bottom').replace('above', 'top');\r\n    step.prevBtnTitle = step.prevBtnTitle || 'Prev';\r\n    step.nextBtnTitle = step.nextBtnTitle || 'Next';\r\n    step.endBtnTitle = step.endBtnTitle || 'End';\r\n\r\n    this.popoverDirective.open({ step });\r\n    if (!step.preventScrolling) {\r\n      ScrollingUtil.ensureVisible(htmlElement);\r\n    }\r\n\r\n    if (step.enableBackdrop) {\r\n      this.tourBackdrop.show(this.element);\r\n    } else {\r\n      this.tourBackdrop.close();\r\n    }\r\n  }\r\n\r\n  public hideTourStep(): void {\r\n    this.isActive = false;\r\n    if (this.tourService.getStatus() === TourState.OFF) {\r\n      this.tourBackdrop.close();\r\n    }\r\n    this.popoverDirective.close();\r\n  }\r\n}\r\n","import { TourHotkeyListenerComponent, IStepOption } from 'ngx-ui-tour-core';\r\nimport { TourStepTemplateService } from './tour-step-template.service';\r\nimport {\r\n  Component,\r\n  TemplateRef,\r\n  ViewChild,\r\n  AfterContentInit,\r\n  ViewEncapsulation,\r\n  Input,\r\n  ContentChild\r\n} from '@angular/core';\r\nimport { NgbTourService } from './ng-bootstrap-tour.service';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'tour-step-template',\r\n  template: `\r\n    <ng-template #tourStep let-step=\"step\">\r\n      <p class=\"tour-step-content\" [innerHTML]=\"step?.content\"></p>\r\n      <div class=\"tour-step-navigation\">\r\n        <button\r\n          *ngIf=\"tourService.hasPrev(step)\"\r\n          class=\"btn btn-sm btn-default\"\r\n          (click)=\"tourService.prev()\"\r\n        >\r\n          « {{ step?.prevBtnTitle }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"tourService.hasNext(step)\"\r\n          class=\"btn btn-sm btn-default\"\r\n          (click)=\"tourService.next()\"\r\n        >\r\n          {{ step?.nextBtnTitle }} »\r\n        </button>\r\n        <button class=\"btn btn-sm btn-default\" (click)=\"tourService.end()\">\r\n          {{ step?.endBtnTitle }}\r\n        </button>\r\n      </div>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class TourStepTemplateComponent extends TourHotkeyListenerComponent\r\n  implements AfterContentInit {\r\n  @ViewChild('tourStep', { read: TemplateRef, static: true })\r\n  public defaultTourStepTemplate: TemplateRef<any>;\r\n\r\n  @Input()\r\n  public stepTemplate: TemplateRef<{ step: IStepOption }>;\r\n\r\n  @ContentChild(TemplateRef)\r\n  public stepTemplateContent: TemplateRef<{ step: IStepOption }>;\r\n\r\n  constructor(\r\n    private tourStepTemplateService: TourStepTemplateService,\r\n    public tourService: NgbTourService\r\n  ) {\r\n    super(tourService);\r\n  }\r\n\r\n  public ngAfterContentInit(): void {\r\n    this.tourStepTemplateService.template =\r\n      this.stepTemplate ||\r\n      this.stepTemplateContent ||\r\n      this.defaultTourStepTemplate;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {TourService, TourBackdropService, TourModule} from 'ngx-ui-tour-core';\r\n\r\nimport { NgbTourService } from './ng-bootstrap-tour.service';\r\nimport { TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective } from './tour-anchor.directive';\r\nimport { TourStepTemplateComponent } from './tour-step-template.component';\r\nimport { TourStepTemplateService } from './tour-step-template.service';\r\n\r\nexport { TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective, TourStepTemplateComponent, NgbTourService };\r\n\r\n@NgModule({\r\n  declarations: [TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective, TourStepTemplateComponent],\r\n  exports: [TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective, TourStepTemplateComponent],\r\n  imports: [CommonModule, NgbPopoverModule, TourModule],\r\n})\r\nexport class TourNgBootstrapModule {\r\n  public static forRoot(): ModuleWithProviders<TourNgBootstrapModule> {\r\n    return {\r\n      ngModule: TourNgBootstrapModule,\r\n      providers: [\r\n        TourStepTemplateService,\r\n        TourService,\r\n        NgbTourService,\r\n        TourBackdropService\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-ui-tour-ng-bootstrap\r\n */\r\n\r\nexport { INgbStepOption as IStepOption } from './lib/step-option.interface';\r\nexport { NgbTourService as TourService } from './lib/ng-bootstrap-tour.service';\r\nexport {\r\n  TourNgBootstrapModule,\r\n  TourAnchorNgBootstrapDirective,\r\n  TourStepTemplateComponent\r\n} from './lib/ng-bootstrap.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgbTourService as ɵa} from './lib/ng-bootstrap-tour.service';\nexport {TourAnchorNgBootstrapPopoverDirective as ɵb} from './lib/tour-anchor.directive';\nexport {TourStepTemplateService as ɵc} from './lib/tour-step-template.service';","<h2>About</h2>\r\n<p>This is a product tour library built with Angular (2+). It's inspired by\r\n  <a tourAnchor=\"angular-ui-tour\" href=\"http://benmarch.github.io/angular-ui-tour\">angular-ui-tour</a>.</p>\r\n<p>\r\n  <code>TourNgBootstrapModule</code> is an implementation of the tour ui that uses\r\n  <a href=\"https://ng-bootstrap.github.io\">NgBootstrap</a> popovers to display tour steps.</p>\r\n\r\n<h2 tourAnchor=\"installation\">Installation</h2>\r\n<ol>\r\n  <li>\r\n    <code>npm install ngx-ui-tour-core ngx-ui-tour-ng-bootstrap @ng-bootstrap/ng-bootstrap</code>\r\n  </li>\r\n  <li>Import\r\n    <code>TourNgBootstrapModule.forRoot()</code> into your app module</li>\r\n  <li>Make sure\r\n    <code>RouterModule</code> is imported in your app module</li>\r\n  <li>Include bootstrap css somehow - i.e. in your\r\n    <code>index.html</code> add this line:\r\n    <br>\r\n    <code>&lt;link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css\" integrity=\"sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M\" crossorigin=\"anonymous\"&gt;</code>\r\n  </li>\r\n</ol>\r\n\r\n<h2 tourAnchor=\"usage\">Usage</h2>\r\n<ol>\r\n  <li>Add\r\n    <code>&lt;tour-step-template&gt;&lt;/tour-step-template&gt;</code> to your root app component</li>\r\n  <li>\r\n    Define anchor points for the tour steps by adding the\r\n    <code>tourAnchor</code> directive throughout your app.\r\n    <pre><code>&lt;div tourAnchor=\"some.anchor.id\"&gt;...&lt;/div&gt;</code></pre>\r\n  </li>\r\n  <li>\r\n    Define your tour steps using\r\n    <code>tourService.initialize(steps)</code>\r\n    <pre>\r\nthis.tourService.initialize([{{ '{' }}\r\n  anchorId: 'some.anchor.id',\r\n  content: 'Some content',\r\n  title: 'First',\r\n}, {{ '{' }}\r\n  anchorId: 'another.anchor.id',\r\n  content: 'Other content',\r\n  title: 'Second',\r\n}]);</pre>\r\n  </li>\r\n  <li>Start the tour with\r\n    <code tourAnchor=\"tourService.start\">tourService.start()</code>\r\n  </li>\r\n  <li>Check out the\r\n    <a href=\"https://github.com/hakimio/ngx-ui-tour/tree/master/src/app/ng-bootstrap\">demo source code</a> for an example.</li>\r\n</ol>\r\n\r\n<h2>FAQ</h2>\r\n\r\n<h4>How to center tour step?</h4>\r\n\r\n<p>You can create an invisible anchor point for the tour step you want to center.</p>\r\n<ol>\r\n  <li>Add a simple div to your html template which will be used as the tour anchor\r\n    <pre><code>\r\n&lt;div class=&quot;centered-tour-element&quot; tourAnchor=&quot;start-tour&quot;&gt;&lt;/div&gt;\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Add CSS for the div\r\n    <pre><code>\r\n.centered-tour-element {{\"{\"}}\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  /* The anchor should be translated to the left by half of your step width and half height  */\r\n  /* For example, if your tour step has dimensions of 280 × 156 px, you have to translate by (-140px, -78px) */\r\n  transform: translate(-140px, -78px);\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Use previously defined tour anchor\r\n    <pre><code>\r\nthis.tourService.initialize([{{\"{\"}}\r\n  anchorId: 'start-tour',\r\n  title: 'Welcome',\r\n  content: 'Welcome to the Ngx-UI-Tour tour!'\r\n{{\"}\"}}]);\r\nthis.tourService.start();\r\n    </code></pre>\r\n  </li>\r\n</ol>\r\n\r\n<h4>How to disable main content scrolling when UI tour is active?</h4>\r\n<p>You can toggle CSS class which disables main content element scrolling when tour starts/ends.</p>\r\n<ol>\r\n  <li>\r\n    Create custom <code>TourService</code>:\r\n    <pre><code>\r\n@Injectable()\r\nexport class MyTourService {{\"{\"}}\r\n\r\n  constructor(\r\n    private readonly tourService: TourService\r\n  ) {{\"{\"}}{{\"}\"}}\r\n\r\n  private readonly MAIN_SECTION_CSS_SELECTOR = 'section.main-content';\r\n  private readonly NO_SCROLL_CSS_CLASS = 'no-scroll';\r\n\r\n  start(steps: IStepOption[]) {{\"{\"}}\r\n    this.tourService.initialize(steps, {{\"{\"}}\r\n      route: 'my-route',\r\n      enableBackdrop: true\r\n    {{\"}\"}});\r\n    this.tourService.end$.subscribe(() => this.setIsScrollable(true));\r\n    this.setIsScrollable(false);\r\n    this.tourService.start();\r\n  {{\"}\"}}\r\n\r\n  private setIsScrollable(isScrollable: boolean) {{\"{\"}}\r\n    const body = document.body,\r\n      mainSection = document.querySelector(this.MAIN_SECTION_CSS_SELECTOR),\r\n      addOrRemove = isScrollable ? 'remove' : 'add';\r\n\r\n    mainSection.classList[addOrRemove](this.NO_SCROLL_CSS_CLASS);\r\n    // You can also optionally disable iOS Safari bounce effect\r\n    body[addOrRemove + 'EventListener']('touchmove', this.preventTouchMove, {{\"{\"}} passive: false });\r\n  {{\"}\"}}\r\n\r\n  private preventTouchMove(e) {{\"{\"}}\r\n    e.preventDefault();\r\n  {{\"}\"}}\r\n\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Add the <code>no-scroll</code> CSS class to your global stylesheet (<code>styles.(s)css</code>)\r\n    <pre><code>\r\n.no-scroll {{\"{\"}}\r\n  overflow: hidden;\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n  <li>\r\n    Use your custom <code>TourService</code> to start the UI tour:\r\n    <pre><code>\r\nimport {{\"{\"}}MyTourService{{\"}\"}} from '@app-utils/my-tour.service';\r\n\r\n@Component({{\"{\"}}\r\n  selector: 'my-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n{{\"}\"}})\r\nexport class AppComponent {{\"{\"}}\r\n\r\n  constructor(\r\n    private readonly myTourService: MyTourService\r\n  ) {{\"{\"}}\r\n    this.myTourService.start([{{\"{\"}}\r\n      anchorId: 'start-tour',\r\n      title: 'Welcome',\r\n      content: 'Welcome to the Ngx-UI-Tour tour!'\r\n    {{\"}\"}}]);\r\n  {{\"}\"}}\r\n\r\n{{\"}\"}}\r\n    </code></pre>\r\n  </li>\r\n</ol>\r\n\r\n<h2>TourService</h2>\r\n<p>The\r\n  <code>TourService</code> controls the tour. Some key functions include:</p>\r\n<dl>\r\n  <dt>start()</dt>\r\n  <dd>Starts the tour</dd>\r\n  <dt>startAt(stepId: number | string)</dt>\r\n  <dd>Start the tour at the step with stepId or at the specified index</dd>\r\n  <dt>end()</dt>\r\n  <dd>Ends the tour</dd>\r\n  <dt>pause()</dt>\r\n  <dd>Pauses the tour</dd>\r\n  <dt>resume()</dt>\r\n  <dd>Resumes the tour</dd>\r\n  <dt>next()</dt>\r\n  <dd>Goes to the next step</dd>\r\n  <dt>prev()</dt>\r\n  <dd>Goes to the previous step</dd>\r\n</dl>\r\n\r\n<h2>Step Configuration</h2>\r\n<p>Each step can have the following properties.</p>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Default</th>\r\n      <th>Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>stepId</td>\r\n      <td>string</td>\r\n      <td>\"\"</td>\r\n      <td>A unique identifier for the step</td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.anchorId\">\r\n      <td>anchorId</td>\r\n      <td>string</td>\r\n      <td>required</td>\r\n      <td>The anchor to which the step will be attached</td>\r\n    </tr>\r\n    <tr>\r\n      <td>title</td>\r\n      <td>string</td>\r\n      <td>\"\"</td>\r\n      <td>The title of the tour step</td>\r\n    </tr>\r\n    <tr>\r\n      <td>content</td>\r\n      <td>string</td>\r\n      <td>\"\"</td>\r\n      <td>The content text of the tour step</td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.enableBackdrop\">\r\n      <td>enableBackdrop</td>\r\n      <td>boolean</td>\r\n      <td>false</td>\r\n      <td>Controls whether to enable active element highlighting</td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.route\">\r\n      <td>route</td>\r\n      <td>string | UrlSegment[]</td>\r\n      <td>undefined</td>\r\n      <td>\r\n        The route to which the tour should navigate before attempting to show this tour step. If undefined, no navigation is attempted.\r\n      </td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.nextStep\">\r\n      <td>nextStep</td>\r\n      <td>number | string</td>\r\n      <td>undefined</td>\r\n      <td>The step index or stepId of the next step. If undefined, the next step in the steps array is used.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>prevStep</td>\r\n      <td>number | string</td>\r\n      <td>undefined</td>\r\n      <td>The step index or stepId of the previous step. If undefined, the previous step in the steps array is used.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>placement</td>\r\n      <td>Placement of a popover accepts: \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\", \"left\", \"left-top\",\r\n        \"left-bottom\", \"right\", \"right-top\", \"right-bottom\" and array of above values.</td>\r\n      <td>\r\n        <span tourAnchor=\"config.placement.default\">'top'</span>\r\n      </td>\r\n      <td>\r\n        Where the tour step should placed with respect to the anchor. Supports all\r\n        <a href=\"https://ng-bootstrap.github.io/#/components/popover/api#NgbPopover\">placement options of ng bootstrap</a>.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>preventScrolling</td>\r\n      <td>boolean</td>\r\n      <td>false</td>\r\n      <td>\r\n        Tour steps automatically scroll to the middle of the screen, if they are off the screen when shown. Setting this value to\r\n        true will disable the scroll behavior.\r\n      </td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.buttons.custom\">\r\n      <td>prevBtnTitle</td>\r\n      <td>string</td>\r\n      <td>false</td>\r\n      <td>\r\n        Sets a custom prev button title for a given step. Default is \"Prev\"\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>nextBtnTitle</td>\r\n      <td>string</td>\r\n      <td>false</td>\r\n      <td>\r\n        Sets a custom next button title for a given step. Default is \"Next\"\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>endBtnTitle</td>\r\n      <td>string</td>\r\n      <td>false</td>\r\n      <td>\r\n        Sets a custom end button title for a given step. Default is \"End\"\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>waitFor</td>\r\n      <td>Promise | Observable</td>\r\n      <td>undefined</td>\r\n      <td>\r\n        [Deprecated: use \"isAsync\" instead]\r\n        Waits for the given Promise or Observable before showing the step contents.\r\n      </td>\r\n    </tr>\r\n    <tr tourAnchor=\"config.isAsync\" *ngIf=\"showIsAsyncConfig\">\r\n      <ng-container >\r\n        <td>isAsync</td>\r\n        <td>boolean</td>\r\n        <td>false</td>\r\n        <td>\r\n          Mark your step as async if anchor element is added to DOM with a delay (ie after data is loaded).\r\n        </td>\r\n      </ng-container>\r\n    </tr>\r\n    <tr>\r\n      <td colspan=\"4\" *ngIf=\"isLoading && !showIsAsyncConfig\">\r\n        <strong>Loading data...</strong>\r\n      </td>\r\n      <td colspan=\"4\" *ngIf=\"!isLoading\" tourAnchor=\"config.fakeData\">\r\n        Fake data: {{fakeData | json}}\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<h2>Defaults</h2>\r\n<p>You can set default values in the\r\n  <code>TourService.initialize</code> function.</p>\r\n<pre>\r\nthis.tourService.initialize(steps, {{ '{' }}\r\n  route: '',\r\n  placement: 'left',\r\n  preventScrolling: true,\r\n});\r\n</pre>\r\n<p>Any value explicitly defined in a step will override the default value.</p>\r\n\r\n<h2 tourAnchor=\"hotkeys\">Hotkeys</h2>\r\n<p>\r\n  Hotkeys are provided using Angular's\r\n  <code>@HostListener</code> decorator. Hotkeys are enabled when the tour starts and disabled when the tour ends.\r\n</p>\r\n<ul>\r\n  <li>\r\n    <strong>left arrow</strong>\r\n    <span> - previous step</span>\r\n  </li>\r\n  <li>\r\n    <strong>right arrow</strong>\r\n    <span> - next step</span>\r\n  </li>\r\n  <li>\r\n    <strong>esc</strong>\r\n    <span> - end tour</span>\r\n  </li>\r\n</ul>\r\n<p>\r\n  You can disable hotkeys by calling\r\n  <code>tourService.disableHotkeys()</code> or re-enable with\r\n  <code>tourService.enableHotkeys()</code>\r\n</p>\r\n\r\n<h2 tourAnchor=\"events\">Event Observables</h2>\r\n<p>The\r\n  <code>TourService</code> emits events that can be subscribed to like this:</p>\r\n<pre>\r\nthis.tourService.initialize$.subscribe((steps: IStepOption[]) => {{ '{' }}\r\n  console.log('tour configured with these steps:', steps);\r\n});\r\n</pre>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Payload</th>\r\n      <th>Emitted When</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>stepShow$</td>\r\n      <td>IStepOption</td>\r\n      <td>A step is shown</td>\r\n    </tr>\r\n    <tr>\r\n      <td>stepHide$</td>\r\n      <td>IStepOption</td>\r\n      <td>A step is hidden</td>\r\n    </tr>\r\n    <tr>\r\n      <td>initialize$</td>\r\n      <td>IStepOption[]</td>\r\n      <td>The tour is configured with a set of steps</td>\r\n    </tr>\r\n    <tr>\r\n      <td>start$</td>\r\n      <td>IStepOption</td>\r\n      <td>The tour begins</td>\r\n    </tr>\r\n    <tr>\r\n      <td>end$</td>\r\n      <td>any</td>\r\n      <td>The tour ends</td>\r\n    </tr>\r\n    <tr>\r\n      <td>pause$</td>\r\n      <td>IStepOption</td>\r\n      <td>The tour is paused</td>\r\n    </tr>\r\n    <tr>\r\n      <td>resume$</td>\r\n      <td>IStepOption</td>\r\n      <td>The tour resumes</td>\r\n    </tr>\r\n    <tr>\r\n      <td>anchorRegister$</td>\r\n      <td>string</td>\r\n      <td>An anchor is registered with the tour</td>\r\n    </tr>\r\n    <tr>\r\n      <td>anchorUnregister$</td>\r\n      <td>string</td>\r\n      <td>An anchor is unregistered from the tour</td>\r\n    </tr>\r\n    <tr>\r\n      <td>startWaiting$</td>\r\n      <td>IStepOption</td>\r\n      <td>Starts waiting for async step (\"isAsync\" or \"waitFor\" configs set)</td>\r\n    </tr>\r\n    <tr>\r\n      <td>stopWaiting$</td>\r\n      <td>IStepOption</td>\r\n      <td>Async anchor is registered or \"waitFor\" config Promise/Observable completes</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<h2 tourAnchor=\"template\">Custom template</h2>\r\n<p>\r\n  You can also customize the tour step template by providing an\r\n  <code>&lt;ng-template let-step=\"step\" &gt;</code> inside the\r\n  <code>&lt;tour-step-template&gt;</code>\r\n</p>\r\n<p>\r\n  The default template is equivalent to this:\r\n</p>\r\n<pre><code>&lt;tour-step-template&gt;\r\n  &lt;ng-template let-step=\"step\"&gt;\r\n    &lt;p class=\"tour-step-content\"&gt;{{ '{{' }}step?.content}}&lt;/p&gt;\r\n    &lt;div class=\"tour-step-navigation\"&gt;\r\n      &lt;button *ngIf=\"tourService.hasPrev(step)\" class=\"btn btn-sm btn-default\" (click)=\"tourService.prev()\"&gt;« {{ '{{' }}step?.prevBtnTitle}}&lt;/button&gt;\r\n      &lt;button *ngIf=\"tourService.hasNext(step)\" class=\"btn btn-sm btn-default\" (click)=\"tourService.next()\"&gt;{{ '{{' }}step?.nextBtnTitle}} »&lt;/button&gt;\r\n      &lt;button class=\"btn btn-sm btn-default\" (click)=\"tourService.end()\"&gt;{{ '{{' }}step?.endBtnTitle}}&lt;/button&gt;\r\n    &lt;/div&gt;\r\n  &lt;/ng-template&gt;\r\n&lt;/tour-step-template&gt;\r\n</code></pre>\r\n\r\n<h2>Styling Active Tour Anchor</h2>\r\n<p>\r\n  The currently active tour anchor element has a\r\n  <code>touranchor--is-active</code> class applied to it, so you can apply your own custom styles to that class to highlight the element being referenced.\r\n</p>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {of, Subscription} from 'rxjs';\r\nimport {TourService} from 'ngx-ui-tour-ng-bootstrap';\r\nimport {delay} from 'rxjs/operators';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'docs',\r\n  templateUrl: './docs.component.html',\r\n})\r\nexport class DocsComponent implements OnInit, OnDestroy {\r\n\r\n  isLoading = true;\r\n  showIsAsyncConfig = true;\r\n  fakeData: number[];\r\n  startWaitingSubscription: Subscription;\r\n\r\n  constructor(\r\n    private readonly tourService: TourService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscribeToShowStep();\r\n  }\r\n\r\n  subscribeToShowStep() {\r\n    this.startWaitingSubscription = this.tourService\r\n      .startWaiting$\r\n      .subscribe(() => this.loadData());\r\n  }\r\n\r\n  loadData() {\r\n    this.showIsAsyncConfig = false;\r\n    of([1, 2, 3])\r\n      .pipe(delay(1000))\r\n      .subscribe(result => {\r\n        this.isLoading = false;\r\n        this.fakeData = result;\r\n        this.showIsAsyncConfig = true;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.startWaitingSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","import {TourService} from 'ngx-ui-tour-ng-bootstrap';\r\nimport {Component} from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ng-bootstrap-route',\r\n  templateUrl: './ng-bootstrap.component.html',\r\n})\r\nexport class NgBootstrapComponent {\r\n  constructor(public tourService: TourService) {\r\n    this.tourService.initialize([{\r\n      anchorId: 'start.tour',\r\n      content: 'Welcome to the Ngx-UI-Tour tour!',\r\n      placement: 'bottom',\r\n      title: 'Welcome',\r\n    }, {\r\n      anchorId: 'angular-ui-tour',\r\n      content: 'Thanks to angular-ui-tour for the inspiration for the library',\r\n      title: 'angular-ui-tour',\r\n    }, {\r\n      anchorId: 'installation',\r\n      content: 'First, install the library...',\r\n      title: 'Installation',\r\n    }, {\r\n      anchorId: 'usage',\r\n      content: '...then use it.',\r\n      title: 'Usage',\r\n    }, {\r\n      anchorId: 'tourService.start',\r\n      content: 'Don\\'t forget to actually start the tour.',\r\n      title: 'Start the tour',\r\n    }, {\r\n      anchorId: 'config.anchorId',\r\n      content: 'Every step needs an anchor.',\r\n      title: 'Anchor',\r\n    }, {\r\n      anchorId: 'config.enableBackdrop',\r\n      content: 'You can enable backdrop to highlight active element.',\r\n      title: 'Backdrop',\r\n      enableBackdrop: true\r\n    }, {\r\n      anchorId: 'config.route',\r\n      content: 'Tours can span multiple routes.',\r\n      title: 'Route',\r\n    }, {\r\n      anchorId: 'another.route',\r\n      content: 'Like this!',\r\n      route: 'ng-bootstrap/other',\r\n      title: 'Another Route',\r\n    }, {\r\n      anchorId: 'config.route',\r\n      content: 'And then back again.',\r\n      title: 'Route Return',\r\n    }, {\r\n      anchorId: 'config.placement.default',\r\n      content: 'Steps can be positioned around an anchor. You can even have multiple steps use the same anchor.',\r\n      title: 'Placement',\r\n    }, {\r\n      anchorId: 'config.buttons.custom',\r\n      content: 'You can set custom step button names',\r\n      title: 'Button Titles',\r\n      prevBtnTitle: 'My Prev',\r\n      nextBtnTitle: 'My Next',\r\n      endBtnTitle: 'My End'\r\n    }, {\r\n      anchorId: 'config.isAsync',\r\n      content: 'Mark your step as async if anchor element is added to DOM with a delay',\r\n      title: 'Wait for async event'\r\n    }, {\r\n      anchorId: 'config.fakeData',\r\n      content: 'Your fake data finished loading',\r\n      title: 'Loading finished',\r\n      isAsync: true\r\n    }, {\r\n      anchorId: 'hotkeys',\r\n      content: 'Try using the hotkeys to navigate through the tour.',\r\n      title: 'Hotkeys',\r\n    }, {\r\n      anchorId: 'events',\r\n      content: 'You can subscribe to events',\r\n      title: 'Events',\r\n    }], {\r\n      route: 'ng-bootstrap',\r\n    });\r\n    this.tourService.start();\r\n  }\r\n}\r\n","<a href=\"https://github.com/hakimio/ngx-ui-tour\" class=\"btn btn-default\">View on GitHub</a>\r\n<a style=\"cursor: pointer\" (click)=\"tourService.toggle()\" class=\"btn btn-primary\" tourAnchor=\"start.tour\">Start Demo Tour</a>\r\n\r\n<router-outlet></router-outlet>\r\n<tour-step-template>\r\n  <!-- <ng-template #jsonTemplate let-step=\"step\">\r\n      {{ step | json }}\r\n  </ng-template> -->\r\n</tour-step-template>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TourNgBootstrapModule } from 'ngx-ui-tour-ng-bootstrap';\r\n\r\nimport { DocsComponent } from './docs.component';\r\nimport { NgBootstrapComponent } from './ng-bootstrap.component';\r\nimport { OtherRouteComponent } from './other-route.component';\r\n\r\n@NgModule({\r\n  declarations: [NgBootstrapComponent, DocsComponent, OtherRouteComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([{\r\n      component: NgBootstrapComponent,\r\n      path: '',\r\n      children: [{\r\n        component: DocsComponent,\r\n        path: '',\r\n      }, {\r\n        component: OtherRouteComponent,\r\n        path: 'other',\r\n      }]\r\n    }]),\r\n    TourNgBootstrapModule.forRoot()\r\n  ],\r\n})\r\nexport class NgBootstrapModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'other-route',\r\n  template: `<p>This is the <strong tourAnchor=\"another.route\">another</strong> route</p>`,\r\n})\r\nexport class OtherRouteComponent {\r\n}\r\n"]}